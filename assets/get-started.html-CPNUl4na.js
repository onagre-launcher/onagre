import{_ as o}from"./not-adwaita-D2Y_w_wh.js";import{_ as r,r as l,o as p,c,a as s,d as e,b as n,w as h,e as a}from"./app-BBKei0bT.js";const u={},d=s("h1",{id:"get-started",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#get-started"},[s("span",null,"Get Started")])],-1),g=s("h2",{id:"installation",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#installation"},[s("span",null,"Installation")])],-1),f={href:"https://repology.org/project/onagre/versions",target:"_blank",rel:"noopener noreferrer"},m=s("img",{src:"https://repology.org/badge/vertical-allrepos/onagre.svg",alt:"Packaging status"},null,-1),b=s("h3",{id:"dependencies",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#dependencies"},[s("span",null,"Dependencies")])],-1),y=s("p",null,[s("strong",null,"Backend:")],-1),j={href:"https://github.com/pop-os/launcher",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/onagre-launcher/launcher",target:"_blank",rel:"noopener noreferrer"},w=s("p",null,[s("strong",null,"Plugin dependencies:")],-1),_={href:"http://qalculate.github.io/",target:"_blank",rel:"noopener noreferrer"},k=s("h3",{id:"building-from-source",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#building-from-source"},[s("span",null,"Building from source")])],-1),v={href:"https://doc.rust-lang.org/cargo/getting-started/installation.html",target:"_blank",rel:"noopener noreferrer"},q=a(`<p><strong>Latest stable release:</strong></p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="hljs-built_in">cargo</span> install --<span class="hljs-built_in">git</span> https://github.com/onagre-launcher/onagre --tag 1.0.0
</code></pre></div><p><strong>Latest upstream:</strong></p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="hljs-built_in">cargo</span> install --<span class="hljs-built_in">git</span> https://github.com/onagre-launcher/onagre
</code></pre></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p><strong>1. Key bindings:</strong></p><table><thead><tr><th style="text-align:left;">Key</th><th style="text-align:left;">Action</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Arrow up/down</code></td><td style="text-align:left;">Change selection</td></tr><tr><td style="text-align:left;"><code>Tab</code></td><td style="text-align:left;">Autocomplete (in files mode)</td></tr><tr><td style="text-align:left;"><code>Esc</code></td><td style="text-align:left;">Quit without launching</td></tr><tr><td style="text-align:left;"><code>Enter</code></td><td style="text-align:left;">Launch selection</td></tr></tbody></table><p>Onagre has three distinct modes: <em>desktop entries</em>, <em>history</em> and <em>plugin</em>. By default, it will start in the <em>history</em> mode which will display the most previously used desktop entries.</p><p><strong>2. Plugins:</strong></p><p>To use a plugin mode simply match its regex when typing your query.</p><p>For instance the <code>file</code> plugin will match <code>^(/|~).*</code>, typing <code>~/</code> would enable the plugin and start the file navigation.</p><p>Plugin with no prefix are enabled by default, there entry will be mixed in the search results.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>To get help about a plugin usage, just type &quot;?&quot; in Onagre to display the bundled help plugin.</p></div><p><strong>Default plugins:</strong></p><table><thead><tr><th style="text-align:left;">Mode</th><th style="text-align:left;">Description</th><th style="text-align:left;">Prefix</th><th style="text-align:left;">Configuration</th></tr></thead><tbody><tr><td style="text-align:left;">History</td><td style="text-align:left;">Display the most used desktop entries on start</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">PopLauncher</td><td style="text-align:left;">Search for desktop entries</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Pulse</td><td style="text-align:left;">Control PulseAudio devices and volume</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Script</td><td style="text-align:left;">Shell scripts as launcher options</td><td style="text-align:left;"></td><td style="text-align:left;"><code>$HOME/.local/share/pop-launcher/scripts</code></td></tr><tr><td style="text-align:left;">Terminal</td><td style="text-align:left;">Terminal or background commands</td><td style="text-align:left;">&#39;run &#39;</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Web</td><td style="text-align:left;">Web search</td><td style="text-align:left;">&#39;ddg &#39;, &#39;g&#39;, ...</td><td style="text-align:left;"><code>$HOME/.local/share/pop-launcher/plugins/web/config.ron</code></td></tr><tr><td style="text-align:left;">Files</td><td style="text-align:left;">Find files using fd/find</td><td style="text-align:left;">&#39;find &#39;</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Recent</td><td style="text-align:left;">Recently-opened document search</td><td style="text-align:left;">&#39;recent &#39;</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Calc</td><td style="text-align:left;">Calculator with unit conversion (uses Qalculate! expressions)</td><td style="text-align:left;">&#39;= &#39;</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Help</td><td style="text-align:left;">List available pop-launcher modes</td><td style="text-align:left;">&#39;?&#39;</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="configuration-and-theming" tabindex="-1"><a class="header-anchor" href="#configuration-and-theming"><span>Configuration and Theming</span></a></h2><p>Onagre will look for a theme file in <code>$XDG_CONFIG_HOME/onagre/theme.scss</code> and will fall back to the default theme if none is found or if your theme contains syntax errors. To ensure your theme is correctly formatted run <code>onagre</code> from the terminal.</p><p>A <code>.scss</code> extension is used for configuration in order to get syntax highlighting, but only a small subset of scss is supported along with some custom properties prefixed with <code>--</code>.</p><p><strong>Example</strong>:</p><p><img src="`+o+`" alt="not-adwaita.png"></p><div class="language-scss" data-ext="scss" data-title="scss"><pre class="language-scss"><code><span class="hljs-selector-class">.onagre</span> {
  <span class="hljs-attribute">background</span>: <span class="hljs-number">#d6d6d6</span>;
  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000000</span>;
  <span class="hljs-attr">--icon-theme</span>: <span class="hljs-string">&quot;Papirus&quot;</span>;
  <span class="hljs-attr">--font-family</span>: <span class="hljs-string">&quot;DejaVuSans&quot;</span>;
  <span class="hljs-attr">--icon-size</span>: <span class="hljs-number">24</span>;
  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8%</span>;
  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#d6d6d6</span>;
  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">4px</span>;
  <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;

  <span class="hljs-selector-class">.container</span> {
    <span class="hljs-selector-class">.rows</span> {
      <span class="hljs-attr">--height</span>: fill-portion <span class="hljs-number">6</span>;
      <span class="hljs-selector-class">.row</span> {
        <span class="hljs-attr">--width</span>: <span class="hljs-number">392</span>;

        <span class="hljs-selector-class">.icon</span> {
          <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">4px</span>;
        }

        <span class="hljs-selector-class">.category-icon</span> {
          <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">5px</span>;
          <span class="hljs-attr">--icon-size</span>: <span class="hljs-number">11</span>;
        }

        <span class="hljs-selector-class">.title</span> {
          <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;
        }

        <span class="hljs-selector-class">.description</span> {
          <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;
        }
      }

      <span class="hljs-selector-class">.row-selected</span> {
        <span class="hljs-attr">--width</span>: <span class="hljs-number">392</span>;
        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8%</span>;
        <span class="hljs-attribute">background</span>:  <span class="hljs-number">#c0c0c0</span>;

        <span class="hljs-selector-class">.icon</span> {
          <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">4px</span>;
        }

        <span class="hljs-selector-class">.category-icon</span> {
          <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">5px</span>;
          <span class="hljs-attr">--icon-size</span>: <span class="hljs-number">11</span>;
        }

        <span class="hljs-selector-class">.title</span> {
          <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;
        }

        <span class="hljs-selector-class">.description</span> {
          <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;
        }
      }
    }

    <span class="hljs-selector-class">.search</span> {
      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5%</span>;
      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffffff</span>;
      <span class="hljs-attr">--height</span>: fill-portion <span class="hljs-number">1</span>;
      <span class="hljs-attribute">padding</span>: <span class="hljs-number">4px</span>;
      <span class="hljs-selector-class">.input</span> {
        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;
      }
    }

    <span class="hljs-selector-class">.scrollable</span> {
      <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span>;
      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5%</span>;
      <span class="hljs-attribute">background</span>: <span class="hljs-number">#c0c0c0</span>;
      <span class="hljs-selector-class">.scroller</span> {
        <span class="hljs-attribute">width</span>: <span class="hljs-number">4px</span>;
        <span class="hljs-attribute">color</span>: <span class="hljs-number">#a1a1a1</span>;
      }
    }
  }
}
</code></pre></div>`,21),P=a(`<h2 id="cli" tabindex="-1"><a class="header-anchor" href="#cli"><span>CLi</span></a></h2><h3 id="launch-onagre-in-a-specific-mode" tabindex="-1"><a class="header-anchor" href="#launch-onagre-in-a-specific-mode"><span>Launch Onagre in a specific mode</span></a></h3><p>You can prefill the input query using the <code>--mode</code> flag. This can be usefull to create a quick shortcut to a specific plugin.</p><p><strong>Example:</strong></p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="hljs-built_in">onagre</span> --mode <span class="hljs-string">&quot;run &quot;</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Note that you need to provide the match query corresponding to the plugin configuration, for most plugin a whitespace is expected after the prefix keyword.</p></div><h3 id="scaling" tabindex="-1"><a class="header-anchor" href="#scaling"><span>Scaling</span></a></h3><p>Depending on your desktop environment, screen size, DPI scale it could be usefull to resize onagre without editing your whole theme file. To do so use the <code>--scale</code> flag.</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="hljs-built_in">onagre</span> --scale 1.2
</code></pre></div><h3 id="launch-onagre-with-an-alternate-theme" tabindex="-1"><a class="header-anchor" href="#launch-onagre-with-an-alternate-theme"><span>Launch Onagre with an alternate theme</span></a></h3><p>You can provide a custom location for Onagre theme:</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="hljs-built_in">onagre</span> --theme <span class="hljs-string">&quot;/home/me/my_custom_theme.scss&quot;</span>
</code></pre></div><h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins"><span>Plugins</span></a></h2><p><code>pop-launcher</code> plugins can reside in any of these directories:</p><ul><li>User-local plugins: <code>~/.local/share/pop-launcher/plugins/{plugin}/</code></li><li>System-wide installation: <code>/etc/pop-launcher/plugins/{plugin}/</code></li><li>Distribution packaging: <code>/usr/lib/pop-launcher/plugins/{plugin}/</code></li></ul><p>Every plugin directory is composed of an executable, meant to be called by pop-launcher backend, and a config file.</p><h3 id="configure-existing-plugin" tabindex="-1"><a class="header-anchor" href="#configure-existing-plugin"><span>Configure existing plugin</span></a></h3>`,17),S={href:"https://github.com/ron-rs/ron",target:"_blank",rel:"noopener noreferrer"},T=s("code",null,".ron",-1),O=a(`<p>For instance, you might customize the default find plugin by editing its config file (<code>/usr/lib/pop-launcher/plugins/find/plugin.ron)</code>:</p><div class="language-ron" data-ext="ron" data-title="ron"><pre class="language-ron"><code>(
    <span class="hljs-comment">// Title of the plugin displayed in the \`help\` plugin (\`?\`).</span>
    name<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;File search&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-comment">// Description of the plugin displayed in the \`help\` plugin </span>
    description<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Syntax: find &lt;filename&gt;\\nExample: find my-document.odt&quot;</span><span class="hljs-punctuation">,</span>
    query<span class="hljs-punctuation">:</span> (
        <span class="hljs-comment">// Regex which will activate the plugin when matching search input.</span>
        regex<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^(find )+&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-comment">// Syntax example displayed in the \`help\` plugin.</span>
        help<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;find &quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-comment">// Should this plugin mix it&#39;s results with the default desktop entry results. </span>
        isolate<span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>
    )<span class="hljs-punctuation">,</span>
    <span class="hljs-comment">// Path of the executable plugin, relative the the plugin directory (you probably don&#39;t want to edit this)</span>
    bin<span class="hljs-punctuation">:</span> (path<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;find&quot;</span>)<span class="hljs-punctuation">,</span>
    <span class="hljs-comment">// The icon displayed </span>
    icon<span class="hljs-punctuation">:</span> Name(<span class="hljs-string">&quot;system-file-manager&quot;</span>)
)
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Some plugins may require additional configuration files. For instance, the <code>web</code> plugin needs a <code>config.ron</code> file which allow you to configure custom shorthand for web search.</p><p><strong>Example:</strong></p><p>The following example add the <code>qw</code> shorthand to make a web search using Qwant search engine.</p><div class="language-ron" data-ext="ron" data-title="ron"><pre class="language-ron"><code>    (
        matches<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-string">&quot;qw&quot;</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
        queries<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> (name<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Qwant&quot;</span><span class="hljs-punctuation">,</span> query<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://www.qwant.com/?q=&quot;</span> )<span class="hljs-punctuation">]</span>
    )<span class="hljs-punctuation">,</span>
    <span class="hljs-comment">// ..</span>
</code></pre></div></div><h3 id="install-plugins" tabindex="-1"><a class="header-anchor" href="#install-plugins"><span>Install plugins</span></a></h3>`,4),I={href:"https://github.com/lucas-dclrcq/awesome-pop-launcher",target:"_blank",rel:"noopener noreferrer"},C=s("p",null,[n("The installation process can vary but most of the time plugin maintainers provide a makefile or a justfile. It often boils down to copying the plugin executable and configuration to "),s("code",null,"~/.local/share/pop-launcher/plugins/{plugin}/"),n(".")],-1),L=s("h3",{id:"write-your-own-plugin",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#write-your-own-plugin"},[s("span",null,"Write your own plugin")])],-1),z=s("p",null,[n("Since "),s("code",null,"pop-launcher"),n(" works with JSON IPC over stdin and stdout pipes, you can write your plugin in any language.")],-1),E={href:"https://github.com/pbui/pop-launcher-scripts",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/pbui",target:"_blank",rel:"noopener noreferrer"},R={href:"https://oknozor.github.io/blog/write-a-pop-launcher-plugin/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.rs/onagre-launcher-toolkit/0.1.1/onagre_launcher_toolkit/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/lucas-dclrcq/awesome-pop-launcher",target:"_blank",rel:"noopener noreferrer"};function B(F,H){const t=l("ExternalLinkIcon"),i=l("RouteLink");return p(),c("div",null,[d,g,s("p",null,[s("a",f,[m,e(t)])]),b,y,s("p",null,[n("Onagre uses the "),s("a",j,[n("pop-launcher"),e(t)]),n(" backend, you will need to install it according to your distribution (for arch users there is and AUR package). Alternatively we maintain a fork of pop-launcher called "),s("a",x,[n("onagre-launcher"),e(t)]),n(" which is retro-compatible with the pop-launcher API while removing all PopOs specifics.")]),w,s("p",null,[n("If you want to use the default calculator plugin you will need "),s("a",_,[n("Qalculate"),e(t)]),n(" installed.")]),k,s("p",null,[n("If there is no Onagre package available for your linux distribution, you can build it from source with "),s("a",v,[n("cargo"),e(t)]),n(".")]),q,s("p",null,[n("See "),e(i,{to:"/theming-reference.html"},{default:h(()=>[n("Theming -> Reference")]),_:1}),n(" a detailed explanation of each available property.")]),P,s("p",null,[n("Plugin configurations are written with the "),s("a",S,[n("Rusty Object Notation"),e(t)]),n(" format (aka "),T,n(").")]),O,s("p",null,[n("A variety of plugins are available for Onagre, offering extended functionality and customization options. You can explore both community maintained and official plugins on the "),s("a",I,[n("awesome-pop-launcher"),e(t)]),n(" repository.")]),C,L,z,s("p",null,[n("To get started I would suggest looking at a simple example, such as the "),s("a",E,[n("emoji plugin"),e(t)]),n(" written in Python by "),s("a",D,[n("pbui"),e(t)]),n(".")]),s("p",null,[n("If you want to build more complex stuff, you might want to take a look at "),s("a",R,[n("this blog post"),e(t)]),n(" about writing a Stackoverflow plugin with Rust and the official "),s("a",N,[n("onagre-launcher-toolkit"),e(t)]),n(" crate.")]),s("p",null,[n("Please if you write your own plugin send a PR to "),s("a",A,[n("awesome-pop-launcher"),e(t)]),n(" 😊 !")])])}const V=r(u,[["render",B],["__file","get-started.html.vue"]]),G=JSON.parse('{"path":"/get-started.html","title":"Get Started","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"Dependencies","slug":"dependencies","link":"#dependencies","children":[]},{"level":3,"title":"Building from source","slug":"building-from-source","link":"#building-from-source","children":[]}]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Configuration and Theming","slug":"configuration-and-theming","link":"#configuration-and-theming","children":[]},{"level":2,"title":"CLi","slug":"cli","link":"#cli","children":[{"level":3,"title":"Launch Onagre in a specific mode","slug":"launch-onagre-in-a-specific-mode","link":"#launch-onagre-in-a-specific-mode","children":[]},{"level":3,"title":"Scaling","slug":"scaling","link":"#scaling","children":[]},{"level":3,"title":"Launch Onagre with an alternate theme","slug":"launch-onagre-with-an-alternate-theme","link":"#launch-onagre-with-an-alternate-theme","children":[]}]},{"level":2,"title":"Plugins","slug":"plugins","link":"#plugins","children":[{"level":3,"title":"Configure existing plugin","slug":"configure-existing-plugin","link":"#configure-existing-plugin","children":[]},{"level":3,"title":"Install plugins","slug":"install-plugins","link":"#install-plugins","children":[]},{"level":3,"title":"Write your own plugin","slug":"write-your-own-plugin","link":"#write-your-own-plugin","children":[]}]}],"git":{"updatedTime":1745430372000,"contributors":[{"name":"Paul Delafosse","email":"paul.delafosse@protonmail.com","commits":5},{"name":"Kenichi Kamiya","email":"kachick1@gmail.com","commits":1}]},"filePathRelative":"get-started.md"}');export{V as comp,G as data};
